//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SimpleConsoleApplication.com.sonraisystems.phoenix {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SonraiDataServiceSoap", Namespace="https://phoenix.sonraisystems.com/")]
    public partial class SonraiDataService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback dsGetTruckDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsGetTruckDataByPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsGetTruckDataCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsGetProgramNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsGetTrucksByProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsGetAddressByRFIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTruckStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsWriteTestDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsLogExceptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsGUIDLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsCheckConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsGetConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateConfigStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteGPSCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteObservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteContainerRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateFromServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsWriteRecordWithWeightOperationCompleted;
        
        private System.Threading.SendOrPostCallback dsSendHandheldDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SonraiDataService() {
            this.Url = global::SimpleConsoleApplication.Properties.Settings.Default.SimpleConsoleApplication_com_sonraisystems_phoenix_SonraiDataService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event dsGetTruckDataCompletedEventHandler dsGetTruckDataCompleted;
        
        /// <remarks/>
        public event dsGetTruckDataByPageCompletedEventHandler dsGetTruckDataByPageCompleted;
        
        /// <remarks/>
        public event dsGetTruckDataCountCompletedEventHandler dsGetTruckDataCountCompleted;
        
        /// <remarks/>
        public event dsGetProgramNamesCompletedEventHandler dsGetProgramNamesCompleted;
        
        /// <remarks/>
        public event dsGetTrucksByProgramCompletedEventHandler dsGetTrucksByProgramCompleted;
        
        /// <remarks/>
        public event dsGetAddressByRFIDCompletedEventHandler dsGetAddressByRFIDCompleted;
        
        /// <remarks/>
        public event UpdateTruckStatusCompletedEventHandler UpdateTruckStatusCompleted;
        
        /// <remarks/>
        public event dsWriteTestDataCompletedEventHandler dsWriteTestDataCompleted;
        
        /// <remarks/>
        public event dsLogExceptionCompletedEventHandler dsLogExceptionCompleted;
        
        /// <remarks/>
        public event dsGUIDLookupCompletedEventHandler dsGUIDLookupCompleted;
        
        /// <remarks/>
        public event dsCheckConfigCompletedEventHandler dsCheckConfigCompleted;
        
        /// <remarks/>
        public event dsGetConfigCompletedEventHandler dsGetConfigCompleted;
        
        /// <remarks/>
        public event UpdateConfigStatusCompletedEventHandler UpdateConfigStatusCompleted;
        
        /// <remarks/>
        public event WriteGPSCollectionCompletedEventHandler WriteGPSCollectionCompleted;
        
        /// <remarks/>
        public event WriteObservationCompletedEventHandler WriteObservationCompleted;
        
        /// <remarks/>
        public event WriteContainerRecordCompletedEventHandler WriteContainerRecordCompleted;
        
        /// <remarks/>
        public event GetUpdateFromServerCompletedEventHandler GetUpdateFromServerCompleted;
        
        /// <remarks/>
        public event dsWriteRecordWithWeightCompletedEventHandler dsWriteRecordWithWeightCompleted;
        
        /// <remarks/>
        public event dsSendHandheldDataCompletedEventHandler dsSendHandheldDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsGetTruckData", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsRBRecord[] dsGetTruckData(string username, string password, string date, string truckid, string programname) {
            object[] results = this.Invoke("dsGetTruckData", new object[] {
                        username,
                        password,
                        date,
                        truckid,
                        programname});
            return ((clsRBRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void dsGetTruckDataAsync(string username, string password, string date, string truckid, string programname) {
            this.dsGetTruckDataAsync(username, password, date, truckid, programname, null);
        }
        
        /// <remarks/>
        public void dsGetTruckDataAsync(string username, string password, string date, string truckid, string programname, object userState) {
            if ((this.dsGetTruckDataOperationCompleted == null)) {
                this.dsGetTruckDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsGetTruckDataOperationCompleted);
            }
            this.InvokeAsync("dsGetTruckData", new object[] {
                        username,
                        password,
                        date,
                        truckid,
                        programname}, this.dsGetTruckDataOperationCompleted, userState);
        }
        
        private void OndsGetTruckDataOperationCompleted(object arg) {
            if ((this.dsGetTruckDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsGetTruckDataCompleted(this, new dsGetTruckDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsGetTruckDataByPage", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsRBRecord[] dsGetTruckDataByPage(string username, string password, string date, string truckid, string programname, int page) {
            object[] results = this.Invoke("dsGetTruckDataByPage", new object[] {
                        username,
                        password,
                        date,
                        truckid,
                        programname,
                        page});
            return ((clsRBRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void dsGetTruckDataByPageAsync(string username, string password, string date, string truckid, string programname, int page) {
            this.dsGetTruckDataByPageAsync(username, password, date, truckid, programname, page, null);
        }
        
        /// <remarks/>
        public void dsGetTruckDataByPageAsync(string username, string password, string date, string truckid, string programname, int page, object userState) {
            if ((this.dsGetTruckDataByPageOperationCompleted == null)) {
                this.dsGetTruckDataByPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsGetTruckDataByPageOperationCompleted);
            }
            this.InvokeAsync("dsGetTruckDataByPage", new object[] {
                        username,
                        password,
                        date,
                        truckid,
                        programname,
                        page}, this.dsGetTruckDataByPageOperationCompleted, userState);
        }
        
        private void OndsGetTruckDataByPageOperationCompleted(object arg) {
            if ((this.dsGetTruckDataByPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsGetTruckDataByPageCompleted(this, new dsGetTruckDataByPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsGetTruckDataCount", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dsGetTruckDataCount(string username, string password, string date, string truckid, string programname) {
            object[] results = this.Invoke("dsGetTruckDataCount", new object[] {
                        username,
                        password,
                        date,
                        truckid,
                        programname});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dsGetTruckDataCountAsync(string username, string password, string date, string truckid, string programname) {
            this.dsGetTruckDataCountAsync(username, password, date, truckid, programname, null);
        }
        
        /// <remarks/>
        public void dsGetTruckDataCountAsync(string username, string password, string date, string truckid, string programname, object userState) {
            if ((this.dsGetTruckDataCountOperationCompleted == null)) {
                this.dsGetTruckDataCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsGetTruckDataCountOperationCompleted);
            }
            this.InvokeAsync("dsGetTruckDataCount", new object[] {
                        username,
                        password,
                        date,
                        truckid,
                        programname}, this.dsGetTruckDataCountOperationCompleted, userState);
        }
        
        private void OndsGetTruckDataCountOperationCompleted(object arg) {
            if ((this.dsGetTruckDataCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsGetTruckDataCountCompleted(this, new dsGetTruckDataCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsGetProgramNames", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] dsGetProgramNames(string username, string password, string clientID) {
            object[] results = this.Invoke("dsGetProgramNames", new object[] {
                        username,
                        password,
                        clientID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void dsGetProgramNamesAsync(string username, string password, string clientID) {
            this.dsGetProgramNamesAsync(username, password, clientID, null);
        }
        
        /// <remarks/>
        public void dsGetProgramNamesAsync(string username, string password, string clientID, object userState) {
            if ((this.dsGetProgramNamesOperationCompleted == null)) {
                this.dsGetProgramNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsGetProgramNamesOperationCompleted);
            }
            this.InvokeAsync("dsGetProgramNames", new object[] {
                        username,
                        password,
                        clientID}, this.dsGetProgramNamesOperationCompleted, userState);
        }
        
        private void OndsGetProgramNamesOperationCompleted(object arg) {
            if ((this.dsGetProgramNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsGetProgramNamesCompleted(this, new dsGetProgramNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsGetTrucksByProgram", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] dsGetTrucksByProgram(string username, string password, string programName) {
            object[] results = this.Invoke("dsGetTrucksByProgram", new object[] {
                        username,
                        password,
                        programName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void dsGetTrucksByProgramAsync(string username, string password, string programName) {
            this.dsGetTrucksByProgramAsync(username, password, programName, null);
        }
        
        /// <remarks/>
        public void dsGetTrucksByProgramAsync(string username, string password, string programName, object userState) {
            if ((this.dsGetTrucksByProgramOperationCompleted == null)) {
                this.dsGetTrucksByProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsGetTrucksByProgramOperationCompleted);
            }
            this.InvokeAsync("dsGetTrucksByProgram", new object[] {
                        username,
                        password,
                        programName}, this.dsGetTrucksByProgramOperationCompleted, userState);
        }
        
        private void OndsGetTrucksByProgramOperationCompleted(object arg) {
            if ((this.dsGetTrucksByProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsGetTrucksByProgramCompleted(this, new dsGetTrucksByProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsGetAddressByRFID", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string dsGetAddressByRFID(string rfidtag, string username, string password) {
            object[] results = this.Invoke("dsGetAddressByRFID", new object[] {
                        rfidtag,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dsGetAddressByRFIDAsync(string rfidtag, string username, string password) {
            this.dsGetAddressByRFIDAsync(rfidtag, username, password, null);
        }
        
        /// <remarks/>
        public void dsGetAddressByRFIDAsync(string rfidtag, string username, string password, object userState) {
            if ((this.dsGetAddressByRFIDOperationCompleted == null)) {
                this.dsGetAddressByRFIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsGetAddressByRFIDOperationCompleted);
            }
            this.InvokeAsync("dsGetAddressByRFID", new object[] {
                        rfidtag,
                        username,
                        password}, this.dsGetAddressByRFIDOperationCompleted, userState);
        }
        
        private void OndsGetAddressByRFIDOperationCompleted(object arg) {
            if ((this.dsGetAddressByRFIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsGetAddressByRFIDCompleted(this, new dsGetAddressByRFIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/UpdateTruckStatus", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateTruckStatus(string guid) {
            this.Invoke("UpdateTruckStatus", new object[] {
                        guid});
        }
        
        /// <remarks/>
        public void UpdateTruckStatusAsync(string guid) {
            this.UpdateTruckStatusAsync(guid, null);
        }
        
        /// <remarks/>
        public void UpdateTruckStatusAsync(string guid, object userState) {
            if ((this.UpdateTruckStatusOperationCompleted == null)) {
                this.UpdateTruckStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTruckStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateTruckStatus", new object[] {
                        guid}, this.UpdateTruckStatusOperationCompleted, userState);
        }
        
        private void OnUpdateTruckStatusOperationCompleted(object arg) {
            if ((this.UpdateTruckStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTruckStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsWriteTestData", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string dsWriteTestData(clsRecord[] records, string username, string password, string programname, string truckid) {
            object[] results = this.Invoke("dsWriteTestData", new object[] {
                        records,
                        username,
                        password,
                        programname,
                        truckid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dsWriteTestDataAsync(clsRecord[] records, string username, string password, string programname, string truckid) {
            this.dsWriteTestDataAsync(records, username, password, programname, truckid, null);
        }
        
        /// <remarks/>
        public void dsWriteTestDataAsync(clsRecord[] records, string username, string password, string programname, string truckid, object userState) {
            if ((this.dsWriteTestDataOperationCompleted == null)) {
                this.dsWriteTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsWriteTestDataOperationCompleted);
            }
            this.InvokeAsync("dsWriteTestData", new object[] {
                        records,
                        username,
                        password,
                        programname,
                        truckid}, this.dsWriteTestDataOperationCompleted, userState);
        }
        
        private void OndsWriteTestDataOperationCompleted(object arg) {
            if ((this.dsWriteTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsWriteTestDataCompleted(this, new dsWriteTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsLogException", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string dsLogException(clsException[] records, string username, string password) {
            object[] results = this.Invoke("dsLogException", new object[] {
                        records,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dsLogExceptionAsync(clsException[] records, string username, string password) {
            this.dsLogExceptionAsync(records, username, password, null);
        }
        
        /// <remarks/>
        public void dsLogExceptionAsync(clsException[] records, string username, string password, object userState) {
            if ((this.dsLogExceptionOperationCompleted == null)) {
                this.dsLogExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsLogExceptionOperationCompleted);
            }
            this.InvokeAsync("dsLogException", new object[] {
                        records,
                        username,
                        password}, this.dsLogExceptionOperationCompleted, userState);
        }
        
        private void OndsLogExceptionOperationCompleted(object arg) {
            if ((this.dsLogExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsLogExceptionCompleted(this, new dsLogExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsGUIDLookup", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string dsGUIDLookup(string programname, string truckid, string username, string password) {
            object[] results = this.Invoke("dsGUIDLookup", new object[] {
                        programname,
                        truckid,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dsGUIDLookupAsync(string programname, string truckid, string username, string password) {
            this.dsGUIDLookupAsync(programname, truckid, username, password, null);
        }
        
        /// <remarks/>
        public void dsGUIDLookupAsync(string programname, string truckid, string username, string password, object userState) {
            if ((this.dsGUIDLookupOperationCompleted == null)) {
                this.dsGUIDLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsGUIDLookupOperationCompleted);
            }
            this.InvokeAsync("dsGUIDLookup", new object[] {
                        programname,
                        truckid,
                        username,
                        password}, this.dsGUIDLookupOperationCompleted, userState);
        }
        
        private void OndsGUIDLookupOperationCompleted(object arg) {
            if ((this.dsGUIDLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsGUIDLookupCompleted(this, new dsGUIDLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsCheckConfig", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string dsCheckConfig(string guid, string timestamp, string username, string password) {
            object[] results = this.Invoke("dsCheckConfig", new object[] {
                        guid,
                        timestamp,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dsCheckConfigAsync(string guid, string timestamp, string username, string password) {
            this.dsCheckConfigAsync(guid, timestamp, username, password, null);
        }
        
        /// <remarks/>
        public void dsCheckConfigAsync(string guid, string timestamp, string username, string password, object userState) {
            if ((this.dsCheckConfigOperationCompleted == null)) {
                this.dsCheckConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsCheckConfigOperationCompleted);
            }
            this.InvokeAsync("dsCheckConfig", new object[] {
                        guid,
                        timestamp,
                        username,
                        password}, this.dsCheckConfigOperationCompleted, userState);
        }
        
        private void OndsCheckConfigOperationCompleted(object arg) {
            if ((this.dsCheckConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsCheckConfigCompleted(this, new dsCheckConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsGetConfig", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsConfig dsGetConfig(string guid, string username, string password) {
            object[] results = this.Invoke("dsGetConfig", new object[] {
                        guid,
                        username,
                        password});
            return ((clsConfig)(results[0]));
        }
        
        /// <remarks/>
        public void dsGetConfigAsync(string guid, string username, string password) {
            this.dsGetConfigAsync(guid, username, password, null);
        }
        
        /// <remarks/>
        public void dsGetConfigAsync(string guid, string username, string password, object userState) {
            if ((this.dsGetConfigOperationCompleted == null)) {
                this.dsGetConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsGetConfigOperationCompleted);
            }
            this.InvokeAsync("dsGetConfig", new object[] {
                        guid,
                        username,
                        password}, this.dsGetConfigOperationCompleted, userState);
        }
        
        private void OndsGetConfigOperationCompleted(object arg) {
            if ((this.dsGetConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsGetConfigCompleted(this, new dsGetConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/UpdateConfigStatus", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateConfigStatus(string guid, string username, string password) {
            object[] results = this.Invoke("UpdateConfigStatus", new object[] {
                        guid,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateConfigStatusAsync(string guid, string username, string password) {
            this.UpdateConfigStatusAsync(guid, username, password, null);
        }
        
        /// <remarks/>
        public void UpdateConfigStatusAsync(string guid, string username, string password, object userState) {
            if ((this.UpdateConfigStatusOperationCompleted == null)) {
                this.UpdateConfigStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConfigStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateConfigStatus", new object[] {
                        guid,
                        username,
                        password}, this.UpdateConfigStatusOperationCompleted, userState);
        }
        
        private void OnUpdateConfigStatusOperationCompleted(object arg) {
            if ((this.UpdateConfigStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConfigStatusCompleted(this, new UpdateConfigStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/WriteGPSCollection", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WriteGPSCollection(clsGPS[] records, string username, string password, string programname, string truckid) {
            object[] results = this.Invoke("WriteGPSCollection", new object[] {
                        records,
                        username,
                        password,
                        programname,
                        truckid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WriteGPSCollectionAsync(clsGPS[] records, string username, string password, string programname, string truckid) {
            this.WriteGPSCollectionAsync(records, username, password, programname, truckid, null);
        }
        
        /// <remarks/>
        public void WriteGPSCollectionAsync(clsGPS[] records, string username, string password, string programname, string truckid, object userState) {
            if ((this.WriteGPSCollectionOperationCompleted == null)) {
                this.WriteGPSCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteGPSCollectionOperationCompleted);
            }
            this.InvokeAsync("WriteGPSCollection", new object[] {
                        records,
                        username,
                        password,
                        programname,
                        truckid}, this.WriteGPSCollectionOperationCompleted, userState);
        }
        
        private void OnWriteGPSCollectionOperationCompleted(object arg) {
            if ((this.WriteGPSCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteGPSCollectionCompleted(this, new WriteGPSCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/WriteObservation", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WriteObservation(Observation[] observations, string username, string password, string programname, string truckid) {
            object[] results = this.Invoke("WriteObservation", new object[] {
                        observations,
                        username,
                        password,
                        programname,
                        truckid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WriteObservationAsync(Observation[] observations, string username, string password, string programname, string truckid) {
            this.WriteObservationAsync(observations, username, password, programname, truckid, null);
        }
        
        /// <remarks/>
        public void WriteObservationAsync(Observation[] observations, string username, string password, string programname, string truckid, object userState) {
            if ((this.WriteObservationOperationCompleted == null)) {
                this.WriteObservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteObservationOperationCompleted);
            }
            this.InvokeAsync("WriteObservation", new object[] {
                        observations,
                        username,
                        password,
                        programname,
                        truckid}, this.WriteObservationOperationCompleted, userState);
        }
        
        private void OnWriteObservationOperationCompleted(object arg) {
            if ((this.WriteObservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteObservationCompleted(this, new WriteObservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/WriteContainerRecord", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WriteContainerRecord(string username, string password, clsContainer[] containers) {
            object[] results = this.Invoke("WriteContainerRecord", new object[] {
                        username,
                        password,
                        containers});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WriteContainerRecordAsync(string username, string password, clsContainer[] containers) {
            this.WriteContainerRecordAsync(username, password, containers, null);
        }
        
        /// <remarks/>
        public void WriteContainerRecordAsync(string username, string password, clsContainer[] containers, object userState) {
            if ((this.WriteContainerRecordOperationCompleted == null)) {
                this.WriteContainerRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteContainerRecordOperationCompleted);
            }
            this.InvokeAsync("WriteContainerRecord", new object[] {
                        username,
                        password,
                        containers}, this.WriteContainerRecordOperationCompleted, userState);
        }
        
        private void OnWriteContainerRecordOperationCompleted(object arg) {
            if ((this.WriteContainerRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteContainerRecordCompleted(this, new WriteContainerRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/GetUpdateFromServer", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsContainer[] GetUpdateFromServer(string username, string password, string timestamp, string handheldID) {
            object[] results = this.Invoke("GetUpdateFromServer", new object[] {
                        username,
                        password,
                        timestamp,
                        handheldID});
            return ((clsContainer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateFromServerAsync(string username, string password, string timestamp, string handheldID) {
            this.GetUpdateFromServerAsync(username, password, timestamp, handheldID, null);
        }
        
        /// <remarks/>
        public void GetUpdateFromServerAsync(string username, string password, string timestamp, string handheldID, object userState) {
            if ((this.GetUpdateFromServerOperationCompleted == null)) {
                this.GetUpdateFromServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateFromServerOperationCompleted);
            }
            this.InvokeAsync("GetUpdateFromServer", new object[] {
                        username,
                        password,
                        timestamp,
                        handheldID}, this.GetUpdateFromServerOperationCompleted, userState);
        }
        
        private void OnGetUpdateFromServerOperationCompleted(object arg) {
            if ((this.GetUpdateFromServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateFromServerCompleted(this, new GetUpdateFromServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsWriteRecordWithWeight", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string dsWriteRecordWithWeight(clsWeightRecord[] records, string username, string password, string programname, string truckid) {
            object[] results = this.Invoke("dsWriteRecordWithWeight", new object[] {
                        records,
                        username,
                        password,
                        programname,
                        truckid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dsWriteRecordWithWeightAsync(clsWeightRecord[] records, string username, string password, string programname, string truckid) {
            this.dsWriteRecordWithWeightAsync(records, username, password, programname, truckid, null);
        }
        
        /// <remarks/>
        public void dsWriteRecordWithWeightAsync(clsWeightRecord[] records, string username, string password, string programname, string truckid, object userState) {
            if ((this.dsWriteRecordWithWeightOperationCompleted == null)) {
                this.dsWriteRecordWithWeightOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsWriteRecordWithWeightOperationCompleted);
            }
            this.InvokeAsync("dsWriteRecordWithWeight", new object[] {
                        records,
                        username,
                        password,
                        programname,
                        truckid}, this.dsWriteRecordWithWeightOperationCompleted, userState);
        }
        
        private void OndsWriteRecordWithWeightOperationCompleted(object arg) {
            if ((this.dsWriteRecordWithWeightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsWriteRecordWithWeightCompleted(this, new dsWriteRecordWithWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://phoenix.sonraisystems.com/dsSendHandheldData", RequestNamespace="https://phoenix.sonraisystems.com/", ResponseNamespace="https://phoenix.sonraisystems.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string dsSendHandheldData(string username, string password, clsHandheldRecord[] handheldRecords, string handheldID, string programName) {
            object[] results = this.Invoke("dsSendHandheldData", new object[] {
                        username,
                        password,
                        handheldRecords,
                        handheldID,
                        programName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dsSendHandheldDataAsync(string username, string password, clsHandheldRecord[] handheldRecords, string handheldID, string programName) {
            this.dsSendHandheldDataAsync(username, password, handheldRecords, handheldID, programName, null);
        }
        
        /// <remarks/>
        public void dsSendHandheldDataAsync(string username, string password, clsHandheldRecord[] handheldRecords, string handheldID, string programName, object userState) {
            if ((this.dsSendHandheldDataOperationCompleted == null)) {
                this.dsSendHandheldDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndsSendHandheldDataOperationCompleted);
            }
            this.InvokeAsync("dsSendHandheldData", new object[] {
                        username,
                        password,
                        handheldRecords,
                        handheldID,
                        programName}, this.dsSendHandheldDataOperationCompleted, userState);
        }
        
        private void OndsSendHandheldDataOperationCompleted(object arg) {
            if ((this.dsSendHandheldDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dsSendHandheldDataCompleted(this, new dsSendHandheldDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://phoenix.sonraisystems.com/")]
    public partial class clsRBRecord {
        
        private string timestampField;
        
        private string rfidtagField;
        
        private string programnameField;
        
        private string truckidField;
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string rfidtag {
            get {
                return this.rfidtagField;
            }
            set {
                this.rfidtagField = value;
            }
        }
        
        /// <remarks/>
        public string programname {
            get {
                return this.programnameField;
            }
            set {
                this.programnameField = value;
            }
        }
        
        /// <remarks/>
        public string truckid {
            get {
                return this.truckidField;
            }
            set {
                this.truckidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://phoenix.sonraisystems.com/")]
    public partial class clsHandheldRecord {
        
        private string rfidtagField;
        
        private string latitudeField;
        
        private string longitudeField;
        
        private string street_numField;
        
        private string street_nameField;
        
        private string unitField;
        
        private string cityField;
        
        private string stateField;
        
        private string serialNumberField;
        
        private TranscationType transactiontypeField;
        
        private string timestampField;
        
        private string notesField;
        
        private string truck_loadField;
        
        /// <remarks/>
        public string rfidtag {
            get {
                return this.rfidtagField;
            }
            set {
                this.rfidtagField = value;
            }
        }
        
        /// <remarks/>
        public string latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public string longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public string street_num {
            get {
                return this.street_numField;
            }
            set {
                this.street_numField = value;
            }
        }
        
        /// <remarks/>
        public string street_name {
            get {
                return this.street_nameField;
            }
            set {
                this.street_nameField = value;
            }
        }
        
        /// <remarks/>
        public string unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public TranscationType transactiontype {
            get {
                return this.transactiontypeField;
            }
            set {
                this.transactiontypeField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string truck_load {
            get {
                return this.truck_loadField;
            }
            set {
                this.truck_loadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://phoenix.sonraisystems.com/")]
    public enum TranscationType {
        
        /// <remarks/>
        ADD,
        
        /// <remarks/>
        UPDATE,
        
        /// <remarks/>
        DELETE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://phoenix.sonraisystems.com/")]
    public partial class clsWeightRecord {
        
        private string programnameField;
        
        private string truckidField;
        
        private string tagField;
        
        private string latField;
        
        private string lonField;
        
        private string timestampField;
        
        private string weightField;
        
        /// <remarks/>
        public string programname {
            get {
                return this.programnameField;
            }
            set {
                this.programnameField = value;
            }
        }
        
        /// <remarks/>
        public string truckid {
            get {
                return this.truckidField;
            }
            set {
                this.truckidField = value;
            }
        }
        
        /// <remarks/>
        public string tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        public string lat {
            get {
                return this.latField;
            }
            set {
                this.latField = value;
            }
        }
        
        /// <remarks/>
        public string lon {
            get {
                return this.lonField;
            }
            set {
                this.lonField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://phoenix.sonraisystems.com/")]
    public partial class clsContainer {
        
        private string street_numField;
        
        private string street_nameField;
        
        private string street_suffixField;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string sizeField;
        
        private string serialnumberField;
        
        private string routeField;
        
        private string custnumberField;
        
        private string rfidtagField;
        
        private string latField;
        
        private string lngField;
        
        private string program_idField;
        
        private string timestampField;
        
        private string handheld_idField;
        
        private Actions actionField;
        
        /// <remarks/>
        public string street_num {
            get {
                return this.street_numField;
            }
            set {
                this.street_numField = value;
            }
        }
        
        /// <remarks/>
        public string street_name {
            get {
                return this.street_nameField;
            }
            set {
                this.street_nameField = value;
            }
        }
        
        /// <remarks/>
        public string street_suffix {
            get {
                return this.street_suffixField;
            }
            set {
                this.street_suffixField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string serialnumber {
            get {
                return this.serialnumberField;
            }
            set {
                this.serialnumberField = value;
            }
        }
        
        /// <remarks/>
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string custnumber {
            get {
                return this.custnumberField;
            }
            set {
                this.custnumberField = value;
            }
        }
        
        /// <remarks/>
        public string rfidtag {
            get {
                return this.rfidtagField;
            }
            set {
                this.rfidtagField = value;
            }
        }
        
        /// <remarks/>
        public string lat {
            get {
                return this.latField;
            }
            set {
                this.latField = value;
            }
        }
        
        /// <remarks/>
        public string lng {
            get {
                return this.lngField;
            }
            set {
                this.lngField = value;
            }
        }
        
        /// <remarks/>
        public string program_id {
            get {
                return this.program_idField;
            }
            set {
                this.program_idField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string handheld_id {
            get {
                return this.handheld_idField;
            }
            set {
                this.handheld_idField = value;
            }
        }
        
        /// <remarks/>
        public Actions action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://phoenix.sonraisystems.com/")]
    public enum Actions {
        
        /// <remarks/>
        DELIVER,
        
        /// <remarks/>
        EDIT_UPDATE,
        
        /// <remarks/>
        EDIT_REMOVE,
        
        /// <remarks/>
        EXCHANGE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://phoenix.sonraisystems.com/")]
    public partial class Observation {
        
        private string timestampField;
        
        private string rfidtagField;
        
        private int observationCodeField;
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string rfidtag {
            get {
                return this.rfidtagField;
            }
            set {
                this.rfidtagField = value;
            }
        }
        
        /// <remarks/>
        public int observationCode {
            get {
                return this.observationCodeField;
            }
            set {
                this.observationCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://phoenix.sonraisystems.com/")]
    public partial class clsGPS {
        
        private System.DateTime timestampField;
        
        private string latField;
        
        private string lonField;
        
        /// <remarks/>
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string lat {
            get {
                return this.latField;
            }
            set {
                this.latField = value;
            }
        }
        
        /// <remarks/>
        public string lon {
            get {
                return this.lonField;
            }
            set {
                this.lonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://phoenix.sonraisystems.com/")]
    public partial class clsConfig {
        
        private string guidField;
        
        private string programnameField;
        
        private string truckidField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string ant1Field;
        
        private string ant2Field;
        
        private string ant3Field;
        
        private string ant4Field;
        
        private string delimeterField;
        
        private string routeField;
        
        private string loggingenabledField;
        
        private string liveaddresslookupField;
        
        private string reportstatusField;
        
        private string connectionstringField;
        
        private string datemodifiedField;
        
        /// <remarks/>
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public string programname {
            get {
                return this.programnameField;
            }
            set {
                this.programnameField = value;
            }
        }
        
        /// <remarks/>
        public string truckid {
            get {
                return this.truckidField;
            }
            set {
                this.truckidField = value;
            }
        }
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string ant1 {
            get {
                return this.ant1Field;
            }
            set {
                this.ant1Field = value;
            }
        }
        
        /// <remarks/>
        public string ant2 {
            get {
                return this.ant2Field;
            }
            set {
                this.ant2Field = value;
            }
        }
        
        /// <remarks/>
        public string ant3 {
            get {
                return this.ant3Field;
            }
            set {
                this.ant3Field = value;
            }
        }
        
        /// <remarks/>
        public string ant4 {
            get {
                return this.ant4Field;
            }
            set {
                this.ant4Field = value;
            }
        }
        
        /// <remarks/>
        public string delimeter {
            get {
                return this.delimeterField;
            }
            set {
                this.delimeterField = value;
            }
        }
        
        /// <remarks/>
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string loggingenabled {
            get {
                return this.loggingenabledField;
            }
            set {
                this.loggingenabledField = value;
            }
        }
        
        /// <remarks/>
        public string liveaddresslookup {
            get {
                return this.liveaddresslookupField;
            }
            set {
                this.liveaddresslookupField = value;
            }
        }
        
        /// <remarks/>
        public string reportstatus {
            get {
                return this.reportstatusField;
            }
            set {
                this.reportstatusField = value;
            }
        }
        
        /// <remarks/>
        public string connectionstring {
            get {
                return this.connectionstringField;
            }
            set {
                this.connectionstringField = value;
            }
        }
        
        /// <remarks/>
        public string datemodified {
            get {
                return this.datemodifiedField;
            }
            set {
                this.datemodifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://phoenix.sonraisystems.com/")]
    public partial class clsException {
        
        private int exceptionIDField;
        
        private System.DateTime timestampField;
        
        private string programnameField;
        
        private string truckidField;
        
        /// <remarks/>
        public int ExceptionID {
            get {
                return this.exceptionIDField;
            }
            set {
                this.exceptionIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string programname {
            get {
                return this.programnameField;
            }
            set {
                this.programnameField = value;
            }
        }
        
        /// <remarks/>
        public string truckid {
            get {
                return this.truckidField;
            }
            set {
                this.truckidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://phoenix.sonraisystems.com/")]
    public partial class clsRecord {
        
        private string programnameField;
        
        private string truckidField;
        
        private string tagField;
        
        private string latField;
        
        private string lonField;
        
        private string timestampField;
        
        /// <remarks/>
        public string programname {
            get {
                return this.programnameField;
            }
            set {
                this.programnameField = value;
            }
        }
        
        /// <remarks/>
        public string truckid {
            get {
                return this.truckidField;
            }
            set {
                this.truckidField = value;
            }
        }
        
        /// <remarks/>
        public string tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        public string lat {
            get {
                return this.latField;
            }
            set {
                this.latField = value;
            }
        }
        
        /// <remarks/>
        public string lon {
            get {
                return this.lonField;
            }
            set {
                this.lonField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsGetTruckDataCompletedEventHandler(object sender, dsGetTruckDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsGetTruckDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsGetTruckDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsRBRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsRBRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsGetTruckDataByPageCompletedEventHandler(object sender, dsGetTruckDataByPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsGetTruckDataByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsGetTruckDataByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsRBRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsRBRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsGetTruckDataCountCompletedEventHandler(object sender, dsGetTruckDataCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsGetTruckDataCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsGetTruckDataCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsGetProgramNamesCompletedEventHandler(object sender, dsGetProgramNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsGetProgramNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsGetProgramNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsGetTrucksByProgramCompletedEventHandler(object sender, dsGetTrucksByProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsGetTrucksByProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsGetTrucksByProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsGetAddressByRFIDCompletedEventHandler(object sender, dsGetAddressByRFIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsGetAddressByRFIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsGetAddressByRFIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateTruckStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsWriteTestDataCompletedEventHandler(object sender, dsWriteTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsWriteTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsWriteTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsLogExceptionCompletedEventHandler(object sender, dsLogExceptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsLogExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsLogExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsGUIDLookupCompletedEventHandler(object sender, dsGUIDLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsGUIDLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsGUIDLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsCheckConfigCompletedEventHandler(object sender, dsCheckConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsCheckConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsCheckConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsGetConfigCompletedEventHandler(object sender, dsGetConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsGetConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsGetConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsConfig Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsConfig)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateConfigStatusCompletedEventHandler(object sender, UpdateConfigStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateConfigStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateConfigStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void WriteGPSCollectionCompletedEventHandler(object sender, WriteGPSCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteGPSCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteGPSCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void WriteObservationCompletedEventHandler(object sender, WriteObservationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteObservationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteObservationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void WriteContainerRecordCompletedEventHandler(object sender, WriteContainerRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteContainerRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteContainerRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetUpdateFromServerCompletedEventHandler(object sender, GetUpdateFromServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateFromServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateFromServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsContainer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsContainer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsWriteRecordWithWeightCompletedEventHandler(object sender, dsWriteRecordWithWeightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsWriteRecordWithWeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsWriteRecordWithWeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void dsSendHandheldDataCompletedEventHandler(object sender, dsSendHandheldDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dsSendHandheldDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dsSendHandheldDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591